plugins {
    id 'java'
    id "io.qameta.allure" version "2.9.6"
    id "io.freefair.lombok" version "6.0.0-m2"
}

repositories {
    mavenCentral()
}

def allureVersion = '2.18.1',
    selenideVersion = '6.9.0',
    appiumVersion = '8.1.1',
    restAssuredVersion = '5.1.1',
    junitVersion = "5.8.2",
    slf4jVersion = '2.0.3',
    ownerVersion = "1.0.12",
    commonsIoVersion = "2.11.0",
    assertjVersion = '3.23.1',
    fakerVersion = "1.0.2"



allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

compileTestJava {
    options.encoding = 'UTF-8'
}


dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "com.github.javafaker:javafaker:$fakerVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.assertj:assertj-core:$assertjVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.appium:java-client:$appiumVersion",
            "commons-io:commons-io:$commonsIoVersion"
    )

    tasks.withType(Test) {
        systemProperties(System.getProperties())
        useJUnitPlatform()

        testLogging {
            lifecycle {
                events "started", "skipped", "failed", "standard_error", "standard_out"
            }
        }
    }

    task mobileTest(type: Test) {
        useJUnitPlatform() {
            includeTags("mobile")
        }
    }

    task webTest(type: Test) {
        useJUnitPlatform() {
            includeTags("web", "api")
        }
    }
}